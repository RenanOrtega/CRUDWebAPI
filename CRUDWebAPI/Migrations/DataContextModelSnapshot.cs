// <auto-generated />
using System;
using CRUDWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRUDWebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRUDWebAPI.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Thais",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Renan",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Silvao",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Victor",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 5,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Thais",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 6,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Renan",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 7,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Silvao",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 8,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Victor",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 9,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Silvao",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 10,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Victor",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 11,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Thais",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 12,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Renan",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 13,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Silvao",
                            Rg = "50.661.998-9"
                        },
                        new
                        {
                            Id = 14,
                            Cpf = "503.570.378-98",
                            DataNascimento = new DateTime(2001, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Victor",
                            Rg = "50.661.998-9"
                        });
                });

            modelBuilder.Entity("CRUDWebAPI.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 2,
                            Nome = "Rua II",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 1,
                            Nome = "Rua HH",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            Nome = "Rua GG",
                            Tipo = 0
                        },
                        new
                        {
                            Id = 4,
                            ClienteId = 4,
                            Nome = "Rua FF",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 5,
                            ClienteId = 5,
                            Nome = "Rua EE",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 6,
                            ClienteId = 7,
                            Nome = "Rua DD",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 7,
                            ClienteId = 8,
                            Nome = "Rua CC",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 8,
                            ClienteId = 10,
                            Nome = "Rua BB",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 9,
                            ClienteId = 11,
                            Nome = "Rua LAA",
                            Tipo = 0
                        },
                        new
                        {
                            Id = 10,
                            ClienteId = 12,
                            Nome = "Rua ZZ",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 11,
                            ClienteId = 13,
                            Nome = "Rua YY",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 12,
                            ClienteId = 14,
                            Nome = "Rua XX",
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("CRUDWebAPI.Models.RedeSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("RedeSocial");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            Link = "www.a.com",
                            Tipo = 0,
                            Username = "@vitao"
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Link = "www.a.com",
                            Tipo = 3,
                            Username = "@vitao"
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            Link = "www.a.com",
                            Tipo = 4,
                            Username = "@vitao"
                        },
                        new
                        {
                            Id = 4,
                            ClienteId = 4,
                            Link = "www.a.com",
                            Tipo = 2,
                            Username = "@vitao"
                        },
                        new
                        {
                            Id = 5,
                            ClienteId = 5,
                            Link = "www.a.com",
                            Tipo = 1,
                            Username = "@vitao"
                        },
                        new
                        {
                            Id = 6,
                            ClienteId = 6,
                            Link = "www.a.com",
                            Tipo = 0,
                            Username = "@vitao"
                        });
                });

            modelBuilder.Entity("CRUDWebAPI.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Telefones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 2,
                            Numero = "(11) 1273468",
                            Tipo = 0
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Numero = "(11) 1111111",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            Numero = "(11) 2222222",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 4,
                            ClienteId = 4,
                            Numero = "(11) 4444444",
                            Tipo = 0
                        },
                        new
                        {
                            Id = 5,
                            ClienteId = 6,
                            Numero = "(11) 5555555",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 6,
                            ClienteId = 7,
                            Numero = "(11) 9999999",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 7,
                            ClienteId = 5,
                            Numero = "(11) 1273468",
                            Tipo = 0
                        },
                        new
                        {
                            Id = 8,
                            ClienteId = 2,
                            Numero = "(11) 1111111",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 9,
                            ClienteId = 9,
                            Numero = "(11) 2222222",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 10,
                            ClienteId = 8,
                            Numero = "(11) 100001010",
                            Tipo = 0
                        },
                        new
                        {
                            Id = 11,
                            ClienteId = 7,
                            Numero = "(11) 111111111",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 12,
                            ClienteId = 13,
                            Numero = "(11) 121212121",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 13,
                            ClienteId = 14,
                            Numero = "(11) 133131313",
                            Tipo = 0
                        },
                        new
                        {
                            Id = 14,
                            ClienteId = 12,
                            Numero = "(11) 14141414",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 15,
                            ClienteId = 11,
                            Numero = "(11) 15151515",
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("CRUDWebAPI.Models.Endereco", b =>
                {
                    b.HasOne("CRUDWebAPI.Models.Cliente", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CRUDWebAPI.Models.RedeSocial", b =>
                {
                    b.HasOne("CRUDWebAPI.Models.Cliente", null)
                        .WithMany("RedesSociais")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CRUDWebAPI.Models.Telefone", b =>
                {
                    b.HasOne("CRUDWebAPI.Models.Cliente", null)
                        .WithMany("Telefones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
